
https://www.runoob.com/design-pattern/flyweight-pattern.html

享元模式（Flyweight Pattern）主要用于减少创建对象的数量，以减少内存占用和提高性能。
这种类型的设计模式属于结构型模式，它提供了减少对象数量从而改善应用所需的对象结构的方式。



享元是对象级别的, 也就是说在多个使用到这个对象的地方都只需要使用这一个对象即可满足要求,
而单例是类级别的, 就是说这个类必须只能实例化出来一个对象, 可以这么说, 单例是享元的一种特例,
设计模式不用拘泥于具体代码, 代码实现可能有n多种方式, 而单例可以看做是享元的实现方式中的一种,
但是他比享元更加严格的控制了对象的唯一性。


级别：
单例模式是类级别的，一个类只能有一个对象实例；
享元模式是对象级别的，可以有多个对象实例，多个变量引用同一个对象实例；

对象个数：享元模式可以再次创建对象 也可以取缓存对象，
        单例模式则是严格控制单个进程中只有一个实例对象

享元模式与单例模式的共同点
  实现节省对象创建的时间
  节约内存资源