
https://my.oschina.net/u/3441184/blog/916670


常用的模板模式有两种实现方式：继承和接口回调，下面我们就分别使用这两种方式来实现模板设计模式。

public void doSomething(){
    固定代码片段

    业务相关代码

    固定代码片段
}


第一种方式: 用继承的方式实现模板

   创建一个模板类，将模板代码封装
   我们需要使用模板的类只需要继承这个模板类，并实现那个抽象方法，那么在调用doTemplet的时候，调用的业务逻辑代码自然就是我们那个子类中的实现了，这样就能实现不同的逻辑使用同一段代码了。
   来让父类在运行期间可以调用到子类的方法。 （抽象类）

   见:com.tian.designcode.demo2_template.Templet

第一种方式: 使用回调的方式实现模板

   首先我们定义一个较为通用的接口,
   这样如果还有其他的代码需要复用模板，那么直接调用useTemplet就可以了。
   模板设计模式在框架的设计中使用比较多，例如springmvc的view就是一个典型的模板设计模式。

   见:com.tian.designcode.demo2_template.Callback
      com.tian.designcode.demo2_template.Test


另外：com.tian.designpattern.templatePattern
